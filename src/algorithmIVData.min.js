/* Algorithm IV (v1.0.0) (learn@algorithmiv.com)
 * Section: User Data, App Initialization, & Web Worker
 * Author: Adam Smith (adamsmith@youlum.com)
 * Copyright (c) 2015 Adam A Smith (github.com/imaginate)
 * The MIT License (algorithmiv.com/docs/license) */

/**
 * ------------------------------------------------------------------
 * Algorithm IV User Data (v1.0.0)
 * ------------------------------------------------------------------
 * manages a list of practice questions and detailed solutions
    for learning computer science focused algorithms and data
    structures, improving programming skillsets, and preparing
    for technical interviews
 * settings: configuration, categories, sources, and questions
 * directions to use app:
   - fill in the four settings variables located within
      algorithmIVData.js with your preferences
   - include the Algorithm IV script tags in your html head as
      shown below (tags must be added in the below order):
      <head>
        <link href="algorithmIV.css" rel="stylesheet" />
        <script src="js/algorithmIVCore.js"></script>
        <script src="js/algorithmIVData.js"></script>
      </head>
 * directions to enable the Algorithm IV fonts:
   - ensure the root http address being used is 
      http://localhost/algorithmIV/[anything]
   - include the Typekit script tags in your html head as
      shown below (tags must be added in the below order
      before the main Algorithm IV tags):
       <head>
        <script src="//use.typekit.net/rcb8bni.js"></script>
        <script>try{Typekit.load();}catch(e){}</script>
        [the three above Algorithm IV tags]
      </head>
 */
(function() {
  "use strict";

  /**
   * -----------------------------------------------
   * Public Variable (configuration)
   * -----------------------------------------------
   * an object containing the configuration settings
      for this module
   * set the configuration to your preferred options
      or leave it blank to use the default settings
   * object properties:
     - searchSettings:
       -- stage:
          ~ description:
            ~~ allows you to disable the search by stage
                functionality if set to false
          ~ value type: boolean
          ~ default option: true
          ~ options:
            ~~ true: enable search by stage
            ~~ false: disable search by stage
       -- source:
          ~ description:
            ~~ allows you to disable the search by source
                functionality if set to false
          ~ value type: boolean
          ~ default option: true
          ~ options:
            ~~ true: enable search by source
            ~~ false: disable search by source
       -- category:
          ~ description:
            ~~ allows you to disable the search by
                category functionality
          ~ value type: boolean
          ~ default option: true
          ~ options:
            ~~ true: enable search by category
            ~~ false: disable search by category
       -- subCat:
          ~ description:
            ~~ allows you to disable the search by
                sub category functionality
            ~~ only works if this.searchSettings.category
                is set to true
          ~ value type: boolean
          ~ default option: true
          ~ options:
            ~~ true: enable search by sub category
            ~~ false: disable search by sub category
     - searchDefaults:
       -- view:
          ~ description:
            ~~ sets the default view
          ~ value type: string
          ~ default option: 'one'
          ~ options:
            ~~ 'one': view one question at a time
            ~~ 'all': view all at once
       -- order:
          ~ description:
            ~~ sets the default list order
          ~ value type: string
          ~ default option: 'asc'
          ~ options:
            ~~ 'asc': ascending
            ~~ 'desc': descending
       -- stage:
          ~ description:
            ~~ sets the default stage shown on app load
            ~~ only works if this.searchSettings.stage
                is set to true
          ~ value type: string
          ~ default option: 'all'
          ~ options:
            ~~ 'all': show all questions
            ~~ 'com': show completed questions
            ~~ 'inc': show unfinished questions
       -- source:
          ~ description:
            ~~ sets the default source shown on app load
            ~~ only works if this.searchSettings.source
                is set to true
          ~ value type: string
          ~ default option: 'all'
          ~ options:
            ~~ 'all': show all questions
            ~~ "your source id": show specific source
       -- mainCat:
          ~ description:
            ~~ sets the default main category shown on
                app load
            ~~ only works if this.searchSettings.category
                is set to true
          ~ value type: string
          ~ default option: 'all'
          ~ options:
            ~~ 'all': show all questions
            ~~ "your category id": show specific category
       -- subCat:
          ~ description:
            ~~ sets the default sub category shown on app
                load
            ~~ only works if this.searchSettings.category
                and this.searchSettings.subCat is set to
                true
          ~ value type: string
          ~ default option: 'all'
          ~ options:
            ~~ 'all': show all questions
            ~~ "your category id": show specific category
       -- startID:
          ~ description:
            ~~ choose which question you want to be shown
                on app load (choose by question id)
            ~~ only works if this.searchDefaults.view is
                set to 'one'
            ~~ a question's id is its index within the
                questions array plus 1
          ~ value type: number
          ~ default option: 0
          ~ options:
            ~~ 0: show the first question matching the search 
            ~~ "your question id": show a specific question
                                    upon app load
     - questionFormat:
       -- id:
          ~ description:
            ~~ show or hide the question's id
            ~~ a question's id is its index from the questions
                array plus 1
          ~ value type: boolean
          ~ default option: true
          ~ options:
            ~~ true: show question id
            ~~ false: hide question id
       -- complete:
          ~ description:
            ~~ show or hide question's completion status
          ~ value type: boolean
          ~ default option: true
          ~ options:
            ~~ true: show question's completion status
            ~~ false: hide question's completion status
       -- source:
          ~ description:
            ~~ show or hide question's source
          ~ value type: boolean
          ~ default option: true
          ~ options:
            ~~ true: show question's source
            ~~ false: hide question's source
       -- category:
          ~ description:
            ~~ show or hide question's categories
          ~ value type: boolean
          ~ default option: true
          ~ options:
            ~~ true: show question's categories
            ~~ false: hide question's categories
       -- links:
          ~ description:
            ~~ show or hide additional links
          ~ value type: boolean
          ~ default option: true
          ~ options:
            ~~ true: show additional links
            ~~ false: hide additional links
       -- output:
          ~ description:
            ~~ show or hide the solution output
          ~ value type: boolean
          ~ default option: true
          ~ options:
            ~~ true: show your solution output
            ~~ false: hide your solution output
     - prettyCode:
       -- prePadding:
          ~ description:
            ~~ an object holding the total padding values
                for the pre element's ordered list
                containing the prettified solution code
            ~~ the padding must match the css stylesheet to
                work correctly. simply add the padding and
                margin values of #aIV pre ol and li to
                obtain the correct numbers. the default css
                sets all except ol's padding to 0
                example css:
                #aIV pre ol { padding:30px 35px 30px 75px }
                example totals:
                { top:30, right:35, bottom:30, left:75 }
            ~~ value type (for all properties): number
            ~~ properties:
               > top: the top padding value
                 >> default value: 30
               > right: the right padding value
                 >> default value: 35
               > bottom: the bottom padding value
                 >> default value: 30
               > left: the left padding value
                 >> default value: 75
            ~~ options:
               > "value between 0 and 250": the pixel count for the
                                             pre list padding totals
       -- lineHeight:
          ~ description:
            ~~ the height of each code line list item within
                the prettified solution code
            ~~ the height must match the css stylesheet to
                work correctly - see below css example:
                #aIV pre li { height:26px }
          ~ value type: number
          ~ default value: 26
          ~ options:
            ~~ "value between 10 and 50": the pixel count for the
                                          pre list item height
     - id:
       -- description:
          ~ enable or disable the onClick action for
             the question's id
          ~ when search view is set to 'all' the id
             onClick action allows you to pick a
             question from a list to view by itself.
             this action automatically switches the
             search view to 'one' once a question
             has been clicked
       -- value type: boolean
       -- default option: true
       -- options:
          ~ true: enable question's id onClick action
          ~ false: disable question's id onClick action
     - worker:
       -- description:
          ~ enable or disable web worker
          ~ web workers cannot parse any DOM objects
             including the window, document, and console
             objects. if you want to use DOM oriented
             objects in your solutions set this setting
             to false. otherwise Algorithm IV will be
             forced to wait until receiving an error to
             reset and load your questions without a web
             worker
       -- value type: boolean
       -- default option: true
       -- options:
          ~ true: enable app web worker to load questions
          ~ false: disable app web worker
   */
  var configuration = {
    searchSettings: {
         stage: true,
        source: true,
      category: true,
        subCat: true
    },
    searchDefaults: {
         view: 'one',
        order: 'asc',
        stage: 'all',
       source: 'all',
      mainCat: 'all',
       subCat: 'all',
      startID:  0
    },
    questionFormat: {
            id: true,
      complete: true,
        source: true,
      category: true,
         links: true,
        output: true
    },
    prettyCode: {
      prePadding: {
           top: 30,
         right: 35,
        bottom: 30,
          left: 75
      },
      lineHeight: 26
    },
        id: true,
    worker: true
  };

  /**
   * -----------------------------------------------
   * Public Variable (sources)
   * -----------------------------------------------
   * an object containing all of the sources that
      created each of the problems included on this
      page
   * every source id must be unique
   * if object is empty the source functionality is
      disabled
   * object format:
      var sources = {
        'sourceID': 'Source Name'
      }
   */
  var sources = {};

  /**
   * -----------------------------------------------
   * Public Variable (categories)
   * -----------------------------------------------
   * an object containing each main and sub question
     category
   * every category id must be unique (a sub category
      id cannot be the same as any main category id)
   * if the main property is empty the category
      functionality is fully disabled
   * if the sub property is empty only the sub category
      functionality is disabled
   * object format:
      var categories = {
        main: {
          'mainCategoryID': 'Category Name'
        },
        sub: {
          'mainCategoryID': {
            'subCategoryID': 'Category Name'
          } 
        }
      }
   */
  var categories = { main:{}, sub:{} };

  /**
   * ---------------------------------------------
   * Public Variable (questions)
   * ---------------------------------------------
   * an array of objects containing each question,
      its details, and your solution for it
   * all below properties are required for every
      object
   * object format:
    {
      complete: false,
        source: 'sourceID',
       mainCat: [ 'mainCatID' ],
        subCat: [ 'subCatID','subCatID' ],
         links: [
           {
             name: 'Algorithm IV Website',
             href: 'http://www.algorithmiv.com'
           }
         ],
       problem: 'Can You Learn More',
      solution: function() {
        return 'No Problem';
      }
    }
   * object properties:
     - complete:
       -- description:
          ~ indicates whether solution is finished
       -- value type: boolean
       -- options:
          ~ true: question is finished
          ~ false: question is incomplete
     - source:
       -- description:
          ~ the id for the question's source
       -- value type: string
     - mainCat:
       -- description:
          ~ the ids for every matching main category
       -- value type: array of strings
     - subCat:
       -- description:
          ~ the ids for every matching sub category
       -- value type: array of strings
     - links:
       -- description:
          ~ links to more details on question
       -- value type: array of objects
       -- object properties:
          ~ name:
            ~~ the displayed name of the link
            ~~ value type: string
          ~ href:
            ~~ the http address for the link
            ~~ value type: string
     - problem:
       -- description:
          ~ the practice problem
          ~ accepts html markup
          ~ use html entities to show reserved html
       -- value type: string
     - solution:
       -- description:
          ~ the code for the solution of the problem
          ~ must be wrapped in an anonymous function
       -- value type: function
   */
  var questions = [];

/* ---------------------------- *
 * -- DO NOT EDIT BELOW HERE -- *
 * ---------------------------- */
(function(m,q,l,v){var n=m||{},r=q||{};l=l||{};v=v||[];n.searchSettings=m.searchSettings||{};n.searchDefaults=m.searchDefaults||{};n.questionFormat=m.questionFormat||{};n.prettyCode=m.prettyCode||{};n.prettyCode.prePadding=m.prettyCode.prePadding||{};r.main=q.main||{};r.sub=q.sub||{};"undefined"!==typeof window&&algorithmIV.init(n,r,l,v)})(configuration,categories,sources,questions);
(function(m){onmessage=function(b){b=b.data;q=b.qLen;l=b.configuration;v=b.sources;n=b.categories;r.init();self.postMessage(l.content)};var q,l={},v={},n={},r=function(){var b;return{init:function(){var s;for(s=0;s<q;s++){b={id:{flag:!1,content:""},source:{flag:!1,content:""},complete:{flag:!1,content:""},category:{flag:!1,main:{flag:!1,h3:"",p:""},sub:{flag:!1,h3:"",p:""}},solution:{error:!1,code:"",height:0},output:{flag:!1,content:""},links:{flag:!1,content:[]}};var f=void 0,e=void 0,f=l.questionFormat.id,
e="";f&&(e=s+1,e=10>e?"00"+e:100>e?"0"+e:""+e);b.id.flag=f;b.id.content=e;f=m[s].source;e=void 0;e=0<v.len&&l.questionFormat.source;b.source.flag=e;b.source.content=e?v.list[f]:"";f=m[s].complete;b.complete.flag=l.questionFormat.complete;b.complete.content=l.questionFormat.complete?f?"Yes":"No":"";var f=m[s].mainCat,e=m[s].subCat,g=void 0,r=void 0,y=void 0,t=g=void 0,h=void 0,p=g=void 0,t=void 0,g=n.len.main,t=f.length,h=e.length,g=0<g&&l.questionFormat.category,r=0<t,y=0<h;b.category.flag=g;b.category.main.flag=
r;b.category.sub.flag=y;if(g){if(r)for(b.category.main.h3="Main "+(1<t?"Categories:":"Category:"),g=0;g<t;g++)b.category.main.p+=0===g?"":", ",b.category.main.p+=n.main[f[g]];if(0<h)for(b.category.sub.h3="Sub "+(1<h?"Categories:":"Category:"),g=0;g<h;g++)a:for(p in b.category.sub.p+=0===g?"":", ",n.sub)if(n.sub.hasOwnProperty(p)&&(t=n.sub[p],"string"===typeof t[e[g]])){b.category.sub.p+=t[e[g]];break a}}f=m[s].solution;p=h=e=void 0;e="function"!==typeof f;e||(h=w.init(f),p=h.lineCount*l.prettyCode.lineHeight+
l.prettyCode.prePadding.top+l.prettyCode.prePadding.bottom);b.solution.error=e;b.solution.code=e?"":h.result;b.solution.height=e?0:p;f=m[s].solution;h=e=void 0;h=(e="function"===typeof f&&l.questionFormat.output)?f():"";h="string"!==typeof h?String(h):h;b.output.flag=e;b.output.content=h;f=m[s].links;p=h=e=void 0;h=f.length;if(e=0<h&&l.questionFormat.links)for(p=0;p<h;p++)b.links.content.push({href:f[p].href,name:f[p].name});else b.links.content=[];b.links.flag=e;l.content.push(b)}}}}(),w=function(){var b,
l="([{;*/%+-<>&^|=!".split(""),f=/[0-9\.]/,e=/[a-f0-9x\.]/i,g=/[a-z_\$]/i,m=/[a-z0-9_\$]/i,n=["class","const","function","var"],t="abstract arguments boolean break byte case catch char const continue debugger default delete do double else enum export extends final finally float for goto if implements import in instanceof int interface item let long native new package private protected public return short static super switch synchronized this throw throws transient try typeof void volatile while with yield".split(" "),
h="abs acos Array asin atan atan2 Boolean ceil charAt charCodeAt clearInterval clearTimeout concat cos Date decodeURI decodeURIComponent encodeURI encodeURIComponent escape eval exp floor fromCharCode getDate getDay getFullYear getHours getMilliseconds getMinutes getMonth getSeconds getSelection getTime getTimezoneOffset getUTCDate getUTCDay getUTCFullYear getUTCHours getUTCMilliseconds getUTCMinutes getUTCMonth getUTCSeconds getYear hasOwnProperty Image indexOf isArray isFinite isNaN isPrototypeOf join lastIndexOf length match Math max min Number Object parse parseFloat parseInt pop pow preference print prototype push random RegExp replace reset resizeBy resizeTo reverse round search select setDate setFullYear setHours setMilliseconds setInterval setMinutes setMonth setSeconds setTime setTimeout setUTCDate setUTCFullYear setUTCHours setUTCMilliseconds setUTCMinutes setUTCMonth setUTCSeconds setYear shift sin slice sort splice split sqrt String substr substring tan test toGMTString toLocaleString toLowerCase toSource toString toUpperCase toUTCString unescape unshift unwatch UTC valueOf watch write writeln".split(" "),
p="false Infinity Nan null true undefined".split(" "),r="alert all anchor anchors appendChild area assert assign back big blink blur body bold button byteToString captureEvents checkbox className clearInterval clearTimeout click clientInformation close closed confirm console constructor createElement crypto decodeURI decodeURIComponent defaultStatus disableExternalCapture document element elements embed embeds enableExternalCapture encodeURI encodeURIComponent escape event fileUpload find fixed focus fontcolor fontsize form forms forward frame frames frameRate getElementById getElementsByClassName getElementsByTagName getOptionValueCount getOptionValue go group groupCollapsed groupEnd handleEvent hidden history home id image images innerHeight innerHTML innerWidth italics javaEnabled layer layers link location log mimeTypes moveAbove moveBelow moveBy moveTo moveToAbsolute navigate navigator offscreenBuffering open opener options outerHeight outerWidth packages pageXOffset pageYOffset parent password pkcs11 plugins prompt propertyIsEnum radio refresh releaseEvents reload reset routeEvent screen screenX screenY scroll scrollBy scrollTo secure select self small status stop strike submit sup taint taintEnabled text textContent textarea top trace unescape untaint window".split(" "),
v=["$","jQuery"],q,w=function(){function b(a){switch(d[a]){case ">":c[a]="&gt;";break;case "<":c[a]="&lt;"}}function z(a){for(;;){++a;if(a>=u)return a;switch(d[a]){case "*":if("/"===d[a+1])return++a;break;case ">":case "<":b(a)}}}function k(a){var c;for(c=d[a];;){++a;if(a===u)return--a;switch(d[a]){case c:if("\\"!==d[a-1])return a;break;case ">":case "<":b(a)}}}function A(a){c[a]='<span class="operator">'+("<"===d[a]?"&lt;":">"===d[a]?"&gt;":d[a])+"</span>";return a}var c,d,u;return{init:function(a){d=
a.split("");u=d.length;c=d.slice();a:{var b;a=0;if(q&&(c[a]="*"===d[a]?' <span class="comment">*':'<span class="comment">'+d[a],"*"===d[0]&&"/"===d[1]?(q=!1,c[1]+="</span>",a=3):(a=z(a),a<u?(q=!1,c[a]+="</span>",++a):c[a-1]+="</span>"),a===u)){a=c.join("");break a}for(;a<u;a++)switch(d[a]){case "/":switch(d[a+1]){case "/":c[a]='<span class="comment">/';a=u-1;c[a]+="</span>";break;case "*":c[a]='<span class="comment">/';a=z(++a);a===u&&(q=!0,--a);c[a]+="</span>";break;default:if(b=0===a?"(":" "===
d[a-1]?d[a-2]:d[a-1],-1!==l.indexOf(b)){b=void 0;c[a]='<span class="regex">/';a=k(a);b=[];b:for(;;){if(3===b.length)break b;switch(d[a+1]){case "g":case "i":case "m":if(-1!==b.indexOf(d[a+1]))break b;b.push(d[a+1]);++a;break;default:break b}}c[a]+="</span>"}else a=A(a)}break;case "'":case '"':c[a]='<span class="string">'+d[a];a=k(a);c[a]+="</span>";break;case " ":c[a]='<span class="space"> ';b:for(;;){if(" "!==d[a+1])break b;++a}c[a]+="</span>";break;case "{":case "[":case "(":case ")":case "]":case "}":c[a]=
'<span class="bracket">'+d[a]+"</span>";break;case "*":case "%":case "+":case "-":case "<":case ">":case "&":case "^":case "|":case "=":case "!":case "~":case "?":a=A(a);break;case ",":c[a]='<span class="comma">,</span>';break;case ";":c[a]='<span class="semicolon">;</span>';break;case ":":c[a]='<span class="colon">:</span>';break;case ".":c[a]='<span class="period">.</span>';break;case "0":case "1":case "2":case "3":case "4":case "5":case "6":case "7":case "8":case "9":c[a]='<span class="number">'+
d[a];b:for(b=b=void 0,b=d[a]+d[a+1],b="0x"===b||"0X"===b?e:f;;){if(a===u-1||!b.test(d[a+1]))break b;++a}c[a]+="</span>";break;default:if(g.test(d[a])){b=void 0;b:{b=a;for(var x=void 0,x=[];;){x.push(d[b]);if(b===u-1||!m.test(d[b+1])){b={index:b,name:x.join("")};break b}++b}}switch(!0){case -1!==n.indexOf(b.name):c[a]="function"==b.name?"("===d[b.index+1]||" "===d[b.index+1]&&"("===d[b.index+2]?'<span class="reservedKeyword">'+d[a]:'<span class="definingKeyword">'+d[a]:'<span class="definingKeyword">'+
d[a];break;case -1!==t.indexOf(b.name):c[a]='<span class="reservedKeyword">'+d[a];break;case -1!==h.indexOf(b.name):c[a]='<span class="nativeKeyword">'+d[a];break;case -1!==p.indexOf(b.name):c[a]='<span class="valueKeyword">'+d[a];break;case -1!==r.indexOf(b.name):c[a]='<span class="clientKeyword">'+d[a];break;case -1!==v.indexOf(b.name):c[a]='<span class="jqueryKeyword">'+d[a];break;default:c[a]='<span class="identifier">'+d[a]}c[b.index]+="</span>";a=b.index}else c[a]='<span class="misc">'+d[a]+
"</span>"}a=c.join("")}return a}}}();return{init:function(e){e=String(e).replace(/\r\n?/g,"\n").replace(/\t/g," ").split("\n");var f,k,h;b=0;q=!1;h=e.length;for(f=0;f<e.length;f++){k=e[f];var c=void 0,d=void 0,g=void 0,a=void 0;k=k.split("");d=k.length;g=d-1;a={code:"",first:"",last:"",padding:0,empty:!1};c=0;a:for(;c<d;c++){if(" "===k[c])k[c]="";else{a.first=k[c];break a}c===g&&(a.empty=!0)}if(!a.empty)a:for(c=g;0<=c;c--)if(" "===k[c])k[c]="";else{a.last=k[c];break a}a.code=k.join("");k=a;if(!k.empty){c=
k;d=k.last;g=void 0;switch(k.first){case "}":case "]":case ")":--b}g=20*b;switch(d){case "{":case "[":case "(":case "?":++b}c.padding=g}k.empty||(k.code=w.init(k.code));e[f]='<li style="padding-left:'+k.padding+'px">'+k.code+"</li>"}return{result:e.join(""),lineCount:h}}}}()})(questions);}());
